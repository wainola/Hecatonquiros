// Code generated by protoc-gen-go. DO NOT EDIT.
// source: list.proto

package list

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type List struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	UserId               string   `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *List) Reset()         { *m = List{} }
func (m *List) String() string { return proto.CompactTextString(m) }
func (*List) ProtoMessage()    {}
func (*List) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{0}
}

func (m *List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_List.Unmarshal(m, b)
}
func (m *List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_List.Marshal(b, m, deterministic)
}
func (m *List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List.Merge(m, src)
}
func (m *List) XXX_Size() int {
	return xxx_messageInfo_List.Size(m)
}
func (m *List) XXX_DiscardUnknown() {
	xxx_messageInfo_List.DiscardUnknown(m)
}

var xxx_messageInfo_List proto.InternalMessageInfo

func (m *List) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *List) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *List) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetListReq struct {
	ListId               string   `protobuf:"bytes,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetListReq) Reset()         { *m = GetListReq{} }
func (m *GetListReq) String() string { return proto.CompactTextString(m) }
func (*GetListReq) ProtoMessage()    {}
func (*GetListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{1}
}

func (m *GetListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetListReq.Unmarshal(m, b)
}
func (m *GetListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetListReq.Marshal(b, m, deterministic)
}
func (m *GetListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetListReq.Merge(m, src)
}
func (m *GetListReq) XXX_Size() int {
	return xxx_messageInfo_GetListReq.Size(m)
}
func (m *GetListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetListReq proto.InternalMessageInfo

func (m *GetListReq) GetListId() string {
	if m != nil {
		return m.ListId
	}
	return ""
}

type ListResp struct {
	Items                []*List  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResp) Reset()         { *m = ListResp{} }
func (m *ListResp) String() string { return proto.CompactTextString(m) }
func (*ListResp) ProtoMessage()    {}
func (*ListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{2}
}

func (m *ListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResp.Unmarshal(m, b)
}
func (m *ListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResp.Marshal(b, m, deterministic)
}
func (m *ListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResp.Merge(m, src)
}
func (m *ListResp) XXX_Size() int {
	return xxx_messageInfo_ListResp.Size(m)
}
func (m *ListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListResp proto.InternalMessageInfo

func (m *ListResp) GetItems() []*List {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetOneListReq struct {
	ListId               string   `protobuf:"bytes,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOneListReq) Reset()         { *m = GetOneListReq{} }
func (m *GetOneListReq) String() string { return proto.CompactTextString(m) }
func (*GetOneListReq) ProtoMessage()    {}
func (*GetOneListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{3}
}

func (m *GetOneListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOneListReq.Unmarshal(m, b)
}
func (m *GetOneListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOneListReq.Marshal(b, m, deterministic)
}
func (m *GetOneListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOneListReq.Merge(m, src)
}
func (m *GetOneListReq) XXX_Size() int {
	return xxx_messageInfo_GetOneListReq.Size(m)
}
func (m *GetOneListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOneListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetOneListReq proto.InternalMessageInfo

func (m *GetOneListReq) GetListId() string {
	if m != nil {
		return m.ListId
	}
	return ""
}

type ListItem struct {
	Item                 *List    `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListItem) Reset()         { *m = ListItem{} }
func (m *ListItem) String() string { return proto.CompactTextString(m) }
func (*ListItem) ProtoMessage()    {}
func (*ListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{4}
}

func (m *ListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListItem.Unmarshal(m, b)
}
func (m *ListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListItem.Marshal(b, m, deterministic)
}
func (m *ListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListItem.Merge(m, src)
}
func (m *ListItem) XXX_Size() int {
	return xxx_messageInfo_ListItem.Size(m)
}
func (m *ListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ListItem.DiscardUnknown(m)
}

var xxx_messageInfo_ListItem proto.InternalMessageInfo

func (m *ListItem) GetItem() *List {
	if m != nil {
		return m.Item
	}
	return nil
}

type RequestTrack struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestTrack) Reset()         { *m = RequestTrack{} }
func (m *RequestTrack) String() string { return proto.CompactTextString(m) }
func (*RequestTrack) ProtoMessage()    {}
func (*RequestTrack) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{5}
}

func (m *RequestTrack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestTrack.Unmarshal(m, b)
}
func (m *RequestTrack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestTrack.Marshal(b, m, deterministic)
}
func (m *RequestTrack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestTrack.Merge(m, src)
}
func (m *RequestTrack) XXX_Size() int {
	return xxx_messageInfo_RequestTrack.Size(m)
}
func (m *RequestTrack) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestTrack.DiscardUnknown(m)
}

var xxx_messageInfo_RequestTrack proto.InternalMessageInfo

func (m *RequestTrack) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*List)(nil), "list.List")
	proto.RegisterType((*GetListReq)(nil), "list.GetListReq")
	proto.RegisterType((*ListResp)(nil), "list.ListResp")
	proto.RegisterType((*GetOneListReq)(nil), "list.GetOneListReq")
	proto.RegisterType((*ListItem)(nil), "list.ListItem")
	proto.RegisterType((*RequestTrack)(nil), "list.RequestTrack")
}

func init() {
	proto.RegisterFile("list.proto", fileDescriptor_af793ce248ee1bf0)
}

var fileDescriptor_af793ce248ee1bf0 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x4d, 0x5b, 0x13, 0x7d, 0xd1, 0x20, 0x23, 0x68, 0xf0, 0x50, 0xca, 0x82, 0x10, 0x44,
	0x8b, 0xb4, 0xf8, 0x01, 0x3c, 0x69, 0x41, 0x10, 0xaa, 0x77, 0xd1, 0x74, 0x0f, 0xc1, 0x98, 0xd4,
	0xec, 0xd6, 0xcf, 0xe4, 0xc7, 0x74, 0x76, 0xb6, 0x36, 0xb1, 0x17, 0x4f, 0x99, 0x3f, 0x6f, 0x7e,
	0x79, 0x8f, 0x05, 0xca, 0xc2, 0xd8, 0xf1, 0xb2, 0xa9, 0x6d, 0x4d, 0x03, 0x57, 0xab, 0x7b, 0x0c,
	0x1e, 0xf8, 0x4b, 0x09, 0x7a, 0xc5, 0x22, 0x0d, 0x46, 0x41, 0xb6, 0x3f, 0xe7, 0x8a, 0x52, 0x44,
	0x79, 0x5d, 0x59, 0x5d, 0xd9, 0xb4, 0x27, 0xc3, 0xdf, 0x96, 0x4e, 0x10, 0xae, 0x8c, 0x6e, 0x66,
	0x8b, 0xb4, 0x2f, 0x8b, 0x75, 0xa7, 0xce, 0x81, 0x3b, 0x6d, 0x1d, 0x6c, 0xae, 0x3f, 0xe9, 0x14,
	0x91, 0xe3, 0xbf, 0x6c, 0xa0, 0xa1, 0x6b, 0x59, 0x76, 0x89, 0x3d, 0xaf, 0x31, 0x4b, 0x1a, 0x61,
	0xb7, 0xb0, 0xfa, 0xc3, 0xb0, 0xa4, 0x9f, 0xc5, 0x13, 0x8c, 0xc5, 0x9e, 0xac, 0xfd, 0x42, 0x65,
	0x38, 0x64, 0xe8, 0x63, 0xa5, 0xff, 0xe5, 0x5e, 0x78, 0xee, 0x8c, 0xcf, 0x68, 0x88, 0x81, 0x3b,
	0x17, 0xc5, 0x5f, 0xac, 0xcc, 0xd5, 0x10, 0x07, 0xcc, 0x5a, 0x69, 0x63, 0x9f, 0x9b, 0xd7, 0xfc,
	0x7d, 0x3b, 0xfc, 0xe4, 0x3b, 0x40, 0xec, 0xe4, 0x4f, 0xba, 0xf9, 0x2a, 0x72, 0x4d, 0x57, 0x88,
	0xd6, 0xd1, 0xe8, 0xc8, 0xc3, 0xda, 0xa4, 0x67, 0x49, 0x07, 0xcf, 0xa1, 0xd4, 0x0e, 0xdd, 0x20,
	0x69, 0x4d, 0x8b, 0xa1, 0xe3, 0xcd, 0x55, 0x1b, 0xa5, 0x7b, 0x28, 0xa2, 0x29, 0x62, 0x16, 0xdc,
	0x96, 0xa5, 0x9b, 0x18, 0x22, 0xbf, 0xee, 0x1a, 0xdd, 0xfe, 0xd7, 0x75, 0xf0, 0x16, 0xca, 0x63,
	0x4e, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x42, 0xb3, 0x1c, 0x75, 0xda, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ListServiceClient is the client API for ListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ListServiceClient interface {
	GetList(ctx context.Context, in *GetListReq, opts ...grpc.CallOption) (*ListResp, error)
	GetOneListItem(ctx context.Context, in *GetOneListReq, opts ...grpc.CallOption) (*ListItem, error)
	GetAllLists(ctx context.Context, in *RequestTrack, opts ...grpc.CallOption) (ListService_GetAllListsClient, error)
}

type listServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewListServiceClient(cc grpc.ClientConnInterface) ListServiceClient {
	return &listServiceClient{cc}
}

func (c *listServiceClient) GetList(ctx context.Context, in *GetListReq, opts ...grpc.CallOption) (*ListResp, error) {
	out := new(ListResp)
	err := c.cc.Invoke(ctx, "/list.ListService/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) GetOneListItem(ctx context.Context, in *GetOneListReq, opts ...grpc.CallOption) (*ListItem, error) {
	out := new(ListItem)
	err := c.cc.Invoke(ctx, "/list.ListService/GetOneListItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) GetAllLists(ctx context.Context, in *RequestTrack, opts ...grpc.CallOption) (ListService_GetAllListsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ListService_serviceDesc.Streams[0], "/list.ListService/GetAllLists", opts...)
	if err != nil {
		return nil, err
	}
	x := &listServiceGetAllListsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ListService_GetAllListsClient interface {
	Recv() (*ListResp, error)
	grpc.ClientStream
}

type listServiceGetAllListsClient struct {
	grpc.ClientStream
}

func (x *listServiceGetAllListsClient) Recv() (*ListResp, error) {
	m := new(ListResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ListServiceServer is the server API for ListService service.
type ListServiceServer interface {
	GetList(context.Context, *GetListReq) (*ListResp, error)
	GetOneListItem(context.Context, *GetOneListReq) (*ListItem, error)
	GetAllLists(*RequestTrack, ListService_GetAllListsServer) error
}

// UnimplementedListServiceServer can be embedded to have forward compatible implementations.
type UnimplementedListServiceServer struct {
}

func (*UnimplementedListServiceServer) GetList(ctx context.Context, req *GetListReq) (*ListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedListServiceServer) GetOneListItem(ctx context.Context, req *GetOneListReq) (*ListItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOneListItem not implemented")
}
func (*UnimplementedListServiceServer) GetAllLists(req *RequestTrack, srv ListService_GetAllListsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAllLists not implemented")
}

func RegisterListServiceServer(s *grpc.Server, srv ListServiceServer) {
	s.RegisterService(&_ListService_serviceDesc, srv)
}

func _ListService_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/list.ListService/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).GetList(ctx, req.(*GetListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_GetOneListItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOneListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).GetOneListItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/list.ListService/GetOneListItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).GetOneListItem(ctx, req.(*GetOneListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_GetAllLists_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestTrack)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ListServiceServer).GetAllLists(m, &listServiceGetAllListsServer{stream})
}

type ListService_GetAllListsServer interface {
	Send(*ListResp) error
	grpc.ServerStream
}

type listServiceGetAllListsServer struct {
	grpc.ServerStream
}

func (x *listServiceGetAllListsServer) Send(m *ListResp) error {
	return x.ServerStream.SendMsg(m)
}

var _ListService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "list.ListService",
	HandlerType: (*ListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _ListService_GetList_Handler,
		},
		{
			MethodName: "GetOneListItem",
			Handler:    _ListService_GetOneListItem_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAllLists",
			Handler:       _ListService_GetAllLists_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "list.proto",
}
